<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd"
				default-autowire="byName">
	
	<context:component-scan base-package="com.cn.xxx"></context:component-scan>
	
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="1" />
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	<!--加载所有配置文件内容  -->
	<bean id="globalConfig" class="com.cn.xxx.commons.core.GlobalConfig">
	     <property name="ignoreResourceNotFound" value="true" />
	     <property name="locations">
	         <list>
	             <value>classpath:*.properties</value>
	         </list>
	     </property>
    </bean>
	
	<!--jdbc配置  -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClass}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="connectionProperties">
			<value>
				defaultRowPrefetch=50;
			</value>
		</property>
		<!-- 最大连接数据库连接数，设置为0时，表示没有限制 -->
		<property name="maxActive" value="1000" />
		<!-- 最大等待连接中的数量，设置为0时，表示没有限制 -->
		<property name="maxIdle" value="100" />
		<!-- 最大等待秒数，单位为毫秒，超过时间会报出错误信息。设为-1表示无限制 -->
		<property name="maxWait" value="200000" />
		<property name="defaultAutoCommit" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxOpenPreparedStatements" value="100" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.query.factory_class">org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<prop key="hibernate.default_schema">${jdbc.schema}</prop>
			</props>
		</property>
		<property name="dataSource"><ref bean="dataSource" /></property>
		<property name="packagesToScan"><list><value>com.cn.xxx</value></list></property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"> 
		<property name="sessionFactory" ref="sessionFactory" /> 
		<property name="dataSource" ref="dataSource" /> 
	</bean>
	<!-- mybatis sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.apache.ibatis.session.SqlSessionFactory">
		<property name="configLocation" value="mybatis/SqlMapConfig.xml"></property>
		<property name="mapperLocations" value="classpath:com/cn/xxx/**/mapper/**/*.xml" />
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- mybatis mapper-->
	<!-- 批量配置mapper代理类，默认bean的id为类名首字母小写 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 配置扫描的包 -->
		<property name="basePackage" value="com.cn.xxx.wxcore.mapper,com.cn.xxx.wxcore.dao"></property>
		<!-- 默认不需要配置SqlSessionFactory（只有一个SqlSessionFactory时），单独配置也可以 
				默认会在上下文中查找
		-->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	<!-- 事务控制 -->
	<tx:advice id="hibernateTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="do*" propagation="REQUIRED" />
			<tx:method name="process*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />  
           	<tx:method name="add*" propagation="REQUIRED" />  
           	<tx:method name="create*" propagation="REQUIRED" />  
           	<tx:method name="insert*" propagation="REQUIRED" />  
           	<tx:method name="update*" propagation="REQUIRED" />
           	<tx:method name="reset*" propagation="REQUIRED" />  
           	<tx:method name="edit*" propagation="REQUIRED" /> 
           	<tx:method name="merge*" propagation="REQUIRED" />  
           	<tx:method name="del*" propagation="REQUIRED" />  
           	<tx:method name="remove*" propagation="REQUIRED" />  
          	<tx:method name="put*" propagation="REQUIRED" /> 
          	<tx:method name="find*" propagation="SUPPORTS" read-only="true"/> 
           	<tx:method name="get*" propagation="SUPPORTS" read-only="true" />  
           	<tx:method name="count*" propagation="SUPPORTS" read-only="true" />
          	<tx:method name="query*" propagation="SUPPORTS" read-only="true" />  
          	<tx:method name="list*" propagation="SUPPORTS" read-only="true" />  
          	<tx:method name="*" propagation="SUPPORTS" read-only="true" />
          	<!-- <tx:method name="*" read-only="false" /> -->
		</tx:attributes>
	</tx:advice>
	
	<aop:aspectj-autoproxy />
	
	<aop:config proxy-target-class="true">
		<!-- <aop:advisor pointcut="(execution(* com.cn..service..*ServiceImpl.*(..))) or(execution(* com.cn.xxx.wxcore.service.*(..)))" advice-ref="hibernateTxAdvice"/> -->
		<aop:advisor pointcut="execution(* com.cn.xxx..service..*(..))" advice-ref="hibernateTxAdvice"/>
		<!-- <aop:advisor pointcut="execution(* com.cn.xxx..*(..))) " advice-ref="hibernateTxAdvice"/> -->		
	</aop:config>
	
	<bean id="TokenThreadInit" class="com.cn.xxx.wxcore.thread.TokenThread"
		factory-method="initThread"></bean>
	
	<bean id="exceptionHandler" class="com.cn.xxx.web.util.ExceptionHandler"></bean>  
    
</beans>
